{
	"name": "masterheader",
	"publisher": "Master Extensions",
	"displayName": "Master > Header",
	"description": "Managing your files header including copyright noties and license agreemnet in your files. It can automatically add header to files.",
	"version": "0.0.1",
	"license": "See License in LICENSE file",
	"main": "./out/extension.js",
	"author": {
		"name": "Baio Authors"
	  },
	  "categories": ["Other"],
	  "icon": "images/icon.png",
	  "galleryBanner": {
		"color": "#3C3B6E",
		"theme": "dark"
	  },
	"engines": {
		"vscode": "^1.52.0"
	},
	"keywords": [
		"header",
		"source",
		"intellectual property",
		"copyright",
		"license",
		"dart",
		"swift",
		"kotlin",
		"typescript",
		"java",
		"javascript",
		"c",
		"cpp",
		"csharp",
		"go",
		"rust"
	],
	"activationEvents": [
		"onCommand:masterheader.addHeader",
		"onLanguage:dart",
		"onLanguage:go",
		"onLanguage:swift",
		"onLanguage:kotlin",
		"onLanguage:c",
		"onLanguage:objective-c",
		"onLanguage:cpp",
		"onLanguage:csharp",
		"onLanguage:typescript",
		"onLanguage:javascript",
		"onLanguage:java",
		"onLanguage:rust"
	],
	"contributes": {
		"commands": [
			{
				"command": "masterheader.addHeader",
				"title": "Add Header",
				"category": "Master"
			},
			{
				"command": "masterheader.updateHeader",
				"title": "Update Header",
				"category": "Master"
			}
		],
		"keybindings": [
			{
				"command": "masterheader.addHeader",
			  	"key": "alt+h",
			  	"mac": "alt+h",
			  	"when": "editorTextFocus && !editorReadonly && config.masterheader.useAltHKeyBindings && editorLangId == dart"
			}
		],
		"menus": {
			"editor/title": [
				{
				  "command": "masterheader.addHeader",
				  "group": "1_modification",
				  "when": "editorFocus && !editorReadonly && config.masterheader.enableEditorTitleContextMenu && editorLangId == dart || editorLangId == go || editorLangId == swift || editorLangId == kotlin || editorLangId == c || editorLangId == objective-c || editorLangId == cpp || editorLangId == csharp || editorLangId == typescript || editorLangId == javascript || editorLangId == java || editorLangId == rust"
			  	}
			],
			"touchBar": [
				{
					"command": "masterheader.addHeader",
					"group": "navigation",
					"when": "isMac && editorFocus && !editorReadonly && config.masterheader.showAddHeaderButtonOnTouchbar && editorLangId == dart || editorLangId == go || editorLangId == swift || editorLangId == kotlin || editorLangId == c || editorLangId == objective-c || editorLangId == cpp || editorLangId == csharp || editorLangId == typescript || editorLangId == javascript || editorLangId == java || editorLangId == rust"
				}
			  ]
		  },
		"configuration": {
			"name": "masterheader",
			"title": "Master > Header",
			"properties": {
				"masterheader.team": {
					"type": "string",
					"default": "Our Team",
					"description": "The team of authors."
				},
				"masterheader.author": {
					"type": "string",
					"default": "The Author",
					"description": "The author of file."
				},
				"masterheader.description": {
					"type": "string",
					"default": "",
					"markdownDescription": "Additional descriptions that can be optionally put into the header. You can use `\\n` as ..."
				},
				"masterheader.license": {
					"type": "string",
					"description": "Select an open source licenses that comply with the Open Source Definition or a custom license to include with your header.",
					"enum": [
						"none",
						"Apache 2",
						"BSD 3-Clause",
						"BSD 2-Clause",
						"GPL 3",
						"LGPL 3",
						"MIT",
						"Mozilla 2",
						"CDDL",
						"Eclipse 2",
						"Boost 1",
						"Boost 1 (REF)",
						"Custom"
					],
					"enumDescriptions": [
						"[No License]",
						"Apache License 2.0",
						"BSD 3-Clause \"New\" or \"Revised\" license",
						"BSD 2-Clause \"Simplified\" or \"FreeBSD\" license",
						"GNU General Public License (GPL) V3",
						"GNU Library or \"Lesser\" General Public License (LGPL) V3",
						"MIT license",
						"Mozilla Public License 2.0",
						"Common Development and Distribution License",
						"Eclipse Public License version 2.0",
						"Boost Software License - Version 1.0",
						"Boost Software License - Version 1.0 (Refrenced Version)",
						"Custom License"
					]
				},
				"masterheader.startOfLineCharacter": {
					"type": "string",
					"description": "Select a character to start each line of header inside the block comment.",
					"default": "astric",
					"enum": [
						"none",
						"astric",
						"double astrics",
						"double slash"
					],
					"enumDescriptions": [
						"Nothing  []",
						"Astric   [*]",
						"Double Astrics   [**]",
						"Double Slash   [//]"
					]
				},
				"masterheader.useSpaceBeforeAndTabAfterStartOfLineCharacter": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Puting a space before and a tab after the start of line character. Only applies when `#masterheader.startOfLineCharacter#` is NOT set to `none`."
				},
				"masterheader.template": {
					"type": "array",
					"default": [
						"Copyright (c) ${year} ${team}",
						"All rights reserved.",
						"",
						"${description}",
						"",
						"${license}",
						"",
						"Created: ${created.datetime} By: ${created.author}"
					],
					"desription": "Template lines of header."
				},
				"masterheader.includeFileUpdateAuthor": {
					"type": "boolean",
					"default": true,
					"description": "Add last author when file is updated after time-stamp."
				},
				"masterheader.formatTimeAsFourHours": {
					"type": "boolean",
					"default": false,
					"description": "Format times as 24-hour clock."
				},
				"masterheader.useAltHKeyBindings": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "Enabling `Alt + H` key binding. Close the open editor windows to take effect."
				},
				"masterheader.enableEditorTitleContextMenu": {
					"type": "boolean",
					"default": true,
					"description": "enable editor title context menu."
				},
				"masterheader.showAddHeaderButtonOnTouchbar": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Note that this option is only avalilable on macbook with touchbar."
				},
				"masterheader.onlyNewFiles": {
					"type": "boolean",
					"default": false,
					"description": "Add only when a new file is created or an empty file is opened."
				},
				"masterheader.notifications": {
					"type": "string",
					"default": "header commands",
					"description": "Controls whether to show notifications, such as when a header is added to a file or its header is updated.",
					"enum": [
						"never",
						"header commands",
						"add header command only",
						"update header command only",
						"auto add or upodate header",
						"auto add header only",
						"auto update header only",
						"always"
					],
					"enumDescriptions": [
						"Do not show any notifications.",
						"Show notifications whenever add or update commands are used.",
						"Show notifications only if you use the add command.",
						"Show notifications only if you use the update command.",
						"Show notifications whenever headers are automatically added or updated.",
						"Show notifications only if a header is added automatically.",
						"Show notifications only if a header is updated automatically.",
						"Always show notifications."
					]
				},
				"masterheader.notificationsLevel": {
					"type": "string",
					"default": "basic",
					"enum": [
						"basic",
						"verbose"
					],
					"enumDescriptions": [
						"Do not show any notifications.",
						"Show basic notifications",
						"Show verbose notifications"
					],
					"markdownDescription": "Controls whether to show normal or verbose notifications. Only applies when `#masterheader.notifications#` is NOT set to `never`."
				}

			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.52.0",
		"@typescript-eslint/eslint-plugin": "^4.9.0",
		"@typescript-eslint/parser": "^4.9.0",
		"eslint": "^7.15.0",
		"glob": "^7.1.6",
		"mocha": "^8.1.3",
		"typescript": "^4.1.2",
		"vscode-test": "^1.4.1"
	}
}
